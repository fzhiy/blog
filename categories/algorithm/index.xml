<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on fzhiy&#39;s blog</title>
    <link>https://blog.fzhiy.net/categories/algorithm/</link>
    <description>Recent content in Algorithm on fzhiy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Feb 2022 22:47:09 +0800</lastBuildDate><atom:link href="https://blog.fzhiy.net/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[刷题]企业真题|专项</title>
      <link>https://blog.fzhiy.net/post/2022-01-19-%E5%88%B7%E9%A2%98%E7%89%9B%E5%AE%A2%E7%BD%91/</link>
      <pubDate>Wed, 19 Jan 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/post/2022-01-19-%E5%88%B7%E9%A2%98%E7%89%9B%E5%AE%A2%E7%BD%91/</guid>
      <description>企业真题 京东 JD1 年终奖 传送门 分析：二维DP模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Bonus { public: int getMost(vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; board) { // write code here // dp[i][j]: 位于(i, j)获得的</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode</title>
      <link>https://blog.fzhiy.net/post/%E5%88%B7%E9%A2%98leetcode/</link>
      <pubDate>Wed, 01 Dec 2021 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/post/%E5%88%B7%E9%A2%98leetcode/</guid>
      <description>精选高频面试题 合并有序链表 反转链表 单例模式 简单工厂模式 快速排序 归并排序 实现一个堆排序 设计LRU缓存 重排链表 奇偶链表 写三个线程交替打印ABC Top</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode每日一题[2022.02]</title>
      <link>https://blog.fzhiy.net/post/2022-02-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
      <pubDate>Tue, 15 Feb 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/post/2022-02-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</guid>
      <description>[2.10]\560. Subarray Sum Equals K 传送门 分析：前缀和 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public: int subarraySum(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { int n = nums.size(); vector&amp;lt;int&amp;gt; sum(n+1, 0); for (int i=0; i&amp;lt;n; i++) { sum[i+1] = sum[i] + nums[i]; } int ans = 0; unordered_map&amp;lt;int, int&amp;gt;</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode每日一题[2022.01]</title>
      <link>https://blog.fzhiy.net/post/2022-01-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
      <pubDate>Sat, 01 Jan 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/post/2022-01-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</guid>
      <description>01.01[312. Burst Balloons] 传送门 You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of</description>
    </item>
    
  </channel>
</rss>

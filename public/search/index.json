[{"categories":[],"contents":"\r主题相关 \r雨临Lewis的博客\r\"不想当写手的码农不是好咸鱼_(xз」∠)_\"\r\r\r\rJava \r雨临Lewis的博客\r\"不想当写手的码农不是好咸鱼_(xз」∠)_\"\r\r\r\r","permalink":"https://blog.fzhiy.net/friends/","tags":[],"title":"友链墙"},{"categories":["Git"],"contents":"Git学习笔记与常用命令  平时用git不太熟练，又花了一点时间来学习。整理一些相关经验和常用命令备忘，应该会更新\n 几个重要命令及术语 引阮一峰的网络博客\n配置所需几种重要Git命令工作流程\n\"\r配置所需\r\n术语 图中几个术语说明：\n Workspace：工作区 Index (又称Stage)：暂存区 Repository：本地仓库（版本库） Remote：远程仓库  其他术语  git: 一个开源的分布式版本控制系统 GitHub: 一个托管和协作管理 Git 仓库的平台 commit 提交: 一个 Git 对象，是你整个仓库的快照的哈希值 branch 分支: 一个轻型可移动的 commit 指针 clone: 一个仓库的本地版本，包含所有提交和分支 remote 远端: 一个 GitHub 上的公共仓库，所有小组成员通过它来交换修改 fork: 一个属于另一用户的 GitHub 上的仓库的副本 pull request 拉取请求: 一处用于比较和讨论分支上引入的差异，且具有评审、评论、集成测试等功能的地方 HEAD: 代表你当前的工作目录。使用git checkout 可移动 HEAD 指针到不同的分支、标记(tags)或提交  一些经验及Git教程小结  git 是最先进的分布式版本控制系统 不要使用windows的记事本编辑任何文件（存在编码问题，notepad++或vscode等），文件夹路径不存在中文，最好也不要有空格 没有使用git add添加到Index的文件不会加入到commit中。 使用git status命令随时掌握工作区的状态；如果git status查看到有文件被修改过，进一步用git diff查看修改内容 HEAD指向的版本是当前版本，git reset --hard commit_id可以切换到commit_id 对应的版本；git log查看提交历史，git reflog查看命令历史，以便确定切换到哪个版本 当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file；当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD \u0026lt;file\u0026gt;，就回到了场景1，第二步按场景1操作；已经提交了不合适的修改到版本库时，想要撤销本次提交，结合上一条经验来确定版本切换，不过前提是没有推送到远程库。 如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。 关联一个远程仓库后，使用命令git push -u origin master第一次推送master分支的所有内容到远程仓库；此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改。如果推送失败，先用git pull抓取远程的新提交，如果出现冲突，先解决冲突。 Git支持多种协议，包括https，但ssh协议速度最快。 git log --graph --pretty=oneline --abbrev-commit 查看分支合并图 合并分支时，--no-ff参数 表示禁用Fast forward。在团队开发中善用分支 修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场；在master分支上修复的bug，想要合并到当前dev分支，可以用git cherry-pick \u0026lt;commit\u0026gt;命令，把bug提交的修改“复制”到当前分支，避免重复劳动。 开发一个新的feature，最好新建一个分支；如果要丢弃一个没合并的分支，通过git branch -D \u0026lt;name\u0026gt; 强制删除，-d 会提示要不要删除 在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name。 rebase操作可以把本地未push的分叉提交历史整理成直线；rebase的目的是使得我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比。 这个在实际中必要吗？实际操作会有问题吗？比如不同的用户在本地rebsae之后再提交是否会混乱？（我再看看Git - 变基） Git的tag时版本库的快照，其实就是指向某个commit的指针（即与某个commit绑定。与分支不同，分支可以移动，tag不能移动）。- 命令git tag \u0026lt;tagname\u0026gt;用于新建一个标签，默认为HEAD，也可以指定一个commit id；命令git tag -a \u0026lt;tagname\u0026gt; -m \u0026quot;blablabla...\u0026quot;可以指定标签信息；命令git tag可以查看所有标签。 - 命令git push origin \u0026lt;tagname\u0026gt;可以推送一个本地标签；命令git push origin --tags可以推送全部未推送过的本地标签； 命令git tag -d \u0026lt;tagname\u0026gt;可以删除一个本地标签；命令git push origin :refs/tags/\u0026lt;tagname\u0026gt;可以删除一个远程标签。 在GitHub上，可以任意Fork开源仓库；自己拥有Fork后的仓库的读写权限；可以推送pull request给官方仓库来贡献代码。 忽略某些文件时，需要编写.gitignore； .gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！ 配置别名，配置别名 - 廖雪峰的官方网站，适用于熟练适用git的用户 搭建Git服务器 搭建Git服务器 - 廖雪峰的官方网站  常用命令 备用一些常见命令原文见[[#参考资料]]，更多请见官网：Git - Reference\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86  git init # 初始化本地git仓库（创建新仓库） git config --global user.name \u0026#34;xxx\u0026#34; # 配置用户名 git config --global user.email \u0026#34;xxx@xxx.com\u0026#34; # 配置邮件 git config --global color.ui true # git status等命令自动着色 git config --global color.status auto git config --global color.diff auto git config --global color.branch auto git config --global color.interactive auto git config --global --unset http.proxy # remove proxy configuration on git git clone git+ssh://git@192.168.53.168/VT.git # clone远程仓库 git status # 查看当前版本状态（是否修改） git add xyz # 添加xyz文件至index git add . # 增加当前子目录下所有更改过的文件至index git commit -m \u0026#39;xxx\u0026#39; # 提交 git commit --amend -m \u0026#39;xxx\u0026#39; # 合并上一次提交（用于反复修改） git commit -am \u0026#39;xxx\u0026#39; # 将add和commit合为一步 git rm xxx # 删除index中的文件 git rm -r * # 递归删除 git log # 显示提交日志 git log -1 # 显示1行日志 -n为n行 git log -5 git log --stat # 显示提交日志及相关变动文件 git log -p -m git show dfb02e6e4f2f7b573337763e5c0013802e392818 # 显示某个提交的详细内容 git show dfb02 # 可只用commitid的前几位 git show HEAD # 显示HEAD提交日志 git show HEAD^ # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本 git tag # 显示已存在的tag git tag -a v2.0 -m \u0026#39;xxx\u0026#39; # 增加v2.0的tag git show v2.0 # 显示v2.0的日志及详细内容 git log v2.0 # 显示v2.0的日志 git diff # 显示所有未添加至index的变更 git diff --cached # 显示所有已添加index但还未commit的变更 git diff HEAD^ # 比较与上一个版本的差异 git diff HEAD -- ./lib # 比较与HEAD版本lib目录的差异 git diff origin/master..master # 比较远程分支master上有本地分支master上没有的 git diff origin/master..master --stat # 只显示差异的文件，不显示具体内容 git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch） git branch # 显示本地分支 git branch --contains 50089 # 显示包含提交50089的分支 git branch -a # 显示所有分支 git branch -r # 显示所有原创分支 git branch --merged # 显示所有已合并到当前分支的分支 git branch --no-merged # 显示所有未合并到当前分支的分支 git branch -m master master_copy # 本地分支改名 git checkout -b master_copy # 从当前分支创建新分支master_copy并检出 git checkout -b master master_copy # 上面的完整版 git checkout features/performance # 检出已存在的features/performance分支 git checkout --track hotfixes/BJVEP933 # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支 git checkout v2.0 # 检出版本v2.0 git checkout -b devel origin/develop # 从远程分支develop创建新本地分支devel并检出 git checkout -- README # 检出head版本的README文件（可用于修改错误回退） git merge origin/master # 合并远程master分支至当前分支 git cherry-pick ff44785404a8e # 合并提交ff44785404a8e的修改 git push origin master # 将当前分支push到远程master分支 git push origin :hotfixes/BJVEP933 # 删除远程仓库的hotfixes/BJVEP933分支 git push --tags # 把所有tag推送到远程仓库 git fetch # 获取所有远程分支（不更新本地分支，另需merge） git fetch --prune # 获取所有原创分支并清除服务器上已删掉的分支 git pull origin master # 获取远程分支master并merge到当前分支 git mv README README2 # 重命名文件README为README2 git reset --hard HEAD # 将当前版本重置为HEAD（通常用于merge失败回退） git rebase git branch -d hotfixes/BJVEP933 # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支） git branch -D hotfixes/BJVEP933 # 强制删除分支hotfixes/BJVEP933 git ls-files # 列出git index包含的文件 git show-branch # 图示当前分支历史 git show-branch --all # 图示所有分支历史 git whatchanged # 显示提交历史对应的文件修改 git revert dfb02e6e4f2f7b573337763e5c0013802e392818 # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818 git ls-tree HEAD # 内部命令：显示某个git对象 git rev-parse v2.0 # 内部命令：显示某个ref对于的SHA1 HASH git reflog # 显示所有提交，包括孤立节点 git show HEAD@{5} git show master@{yesterday} # 显示master分支昨天的状态 git log --pretty=format:\u0026#39;%h %s\u0026#39; --graph # 图示提交日志 git show HEAD~3 git show -s --pretty=raw 2be7fcb476 git stash # 暂存当前修改，将所有至为HEAD状态 git stash list # 查看所有暂存 git stash show -p stash@{0} # 参考第一次暂存 git stash apply stash@{0} # 应用第一次暂存 git grep \u0026#34;delete from\u0026#34; # 文件中搜索文本“delete from” git grep -e \u0026#39;#define\u0026#39; --and -e SORT_DIRENT git gc git fsck   参考资料  Git教程 - 廖雪峰的官方网站 常用 Git 命令清单 - 阮一峰的网络日志 git命令大全 · GitHub Git - Reference GitHub Git 备忘单 - GitHub Cheatsheets workspace :: Git Cheatsheet Git - Book  ","permalink":"https://blog.fzhiy.net/2021-09-07-git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","tags":["Git"],"title":"Git学习笔记与常用命令"},{"categories":null,"contents":"自我介绍  余锋，网络空间安全专业硕士在读 坐标：福建福州，曾居住武汉、湘潭 爱好：捣鼓和折腾新技术，包括但不限于机器学习、深度强化学习、推荐系统、联邦学习、区块链、网络安全、Web开发。喜欢跑步、乒乓球、篮球等运动，半路闯入的心理学、历史爱好者，正在成长的骑行爱好者和登山爱好者  联系方式 Email：fzhiy270@163.com\n其他平台 [link url=\u0026ldquo;https://blog.csdn.net/feng_zhiyu\u0026rdquo;]CSDN[/link] [github url=\u0026ldquo;https://github.com/fzhiy\u0026rdquo;]github[/github] [link url=\u0026ldquo;https://www.zhihu.com/people/ni-feng-88-10\u0026rdquo;]知乎[/link]\n本站相关  网站尚处于不断完善中，因此可能下一次访问网站时有部分变动不要太惊讶哦。希望分享的内容能够对你有所帮助，有什么疑惑或建议欢迎留言，这也是对我的帮助呀！对你的来访再次表示欢迎和感谢！\n 由来  我从2017年开始写博客，主要在CSDN和博客园。于2018年开始建立个人博客，一年后由于各种其他原因没有继续维护个人博客，因此，之前的博客不再此网站中再发布，有想了解的朋友可以在我的 CSDN中浏览。\n 如无特殊原因我会将个人的一些学习记录以及总结（包括但不限于paper以及相关知识的笔记）发布在本站，并持续维护。欢迎关注或交流拍砖~\n域名  在由来部分提到过的，曾在2018年搭建了个人博客，那时候使用的域名为 fzhiy.com，然由于某些原因未能继续维护网站失去域名使用权。\n 2020.08.08，此网站[枫之羽]正式上线，使用域名yu-feng.top。（使用的域名都是尽可能的有独特性并具有识别度，奈何名字过于大众化，一些域名被商用了或者漫天要价，后退而求其次选择自己认为具有一定识别度的域名。）\n2020.09.12，新域名fzhiy.net即将上线（正在等待备案），使用此域名或许是因为情结，之后可能就是双域名了。\n2020.09.16，经过备案信息变更后新域名fzhiy.net也备案成功了。（相比几年前漫长的备案过程[25天左右]，现在真的很迅速了）\n当前两个域名都可使用，https://fzhiy.net/ 和 https://yu-feng.top/ ，后者会重定向到前者。\nPS：若您访问时出现重定向次数过多或其他无法访问的问题，请清除浏览器缓存后重新访问，若依然存在问题，可到留言页面说明https://fzhiy.net/comments.html ，十分感谢！\n网站进展  2020.12.17，阿里云OSS自定义域名+CDN加速 2020.12.19，配置https访问+阿里云CDN Referer防盗链以及OSS Referer防盗链 2021.09.05，  采用hugo + github action搭建博客并自动化部署。（都是才接触不久的，花了一大天时间。。感觉违背将重心放在写作上，舍本逐末瞎折）这个博客站点专门用来分享笔记，原网站 https://fzhiy.net/ 计划改动中\u0026hellip; 改用github图床 + jsdelivr CDN加速（还是免费香呀~） LoveIt主题个性化配置 打算制作个人主页， 建立一个能够分享学习笔记的站点。     ","permalink":"https://blog.fzhiy.net/about/","tags":null,"title":"关于本站"},{"categories":["Reading"],"contents":"技术 书籍  C++语言的设计与演化 C++ Primer 第五版 基础部分 深度探索C++对象模型 TODO STL源码剖析 有点难啃 Go语言核心编程 Go语言并发之道 50%，感觉得看英文原版 Go语言学习笔记 50% 目前读完了上卷，语言凝练，知识点清晰。 都说雨神这本书很好，值得反复阅读。可能我还需要继续学习。。 Go语言高级编程 20% Go语言编程之旅 MySQL必知必会 MySQL命令小册子。实用 MySQL是怎样运行的：从根儿上理解MySQL 95%。 总体来说比较适合入门（或许 从零开始学MySQL更适合入门，还没看过），学习曲线比较平缓。顺序读下来确实会好，如果前置知识点都会的话可跳读（就像原作者说的，有的地方凑字数 深入MySQL技术内幕 第二版 45%，这本书不太适合入门。。进阶读物吧 高性能MySQL 第三版 索引章节。进阶 Redis设计与实现 100%，入门必读。 Redis实战 Redis深度历险：核心原理和应用实践 35% 源码、原理、应用等，无论是书籍语言描述和行文来说都比较接地气 Redis 5设计与源码分析 60% 鸟哥的Linux私房菜 第四版 Linux内核设计与实现 深入理解linux内核 Linux高性能服务器 30% Linux多线程编程 TODO 深入理解计算机系统 第三版 网络是怎样连接的 TODO 计算机网络 自顶向下 100% 图解HTTP 100% 领域驱动设计精粹 领域驱动设计 TODO 设计模式 编程之美 第二版 编写可读代码的艺术 Rust权威指南 程序员修炼之道 数据密集型应用设计， 原书《Designing Data-Intensive Application》  专栏  数据结构与算法之美 70% 左耳听风 推荐系统三十六式 MySQL实战45讲 30% 操作系统实战45讲 TODO 22讲通关Go语言 透视HTTP协议 深入理解TCP协议：从原理到实践 Redis核心技术与实战 趣谈网络协议 从零开始学架构，书籍同名  其他  金字塔原理 生而贫穷 为什么中国人勤劳而不富有 数学之美 浪潮之巅 软技能：代码之外的生存指南   ","permalink":"https://blog.fzhiy.net/2021-08-18-%E9%82%A3%E4%BA%9B%E5%B9%B4%E8%AF%BB%E8%BF%87%E7%9A%84%E4%B9%A6todo_list/","tags":["MySQL","Cpp","Golang","Network Programming"],"title":"那些年读过的书[\u0026TODO_list]"},{"categories":["Reading"],"contents":"C++\n 《C++语言的设计与演化》：可以用来理解C++的设计思路，知其所以然 《Effective C++》：很多关于C++方面面试问题的出处 《More Effective C++》： Effective C++的进阶版 《深度探索C++对象模型》 《C++ Primer》 ：很多人推荐看完这本书，但是这本书内容太多了，我建议当一个字典，遇到问题去查。 《STL源码剖析 》：C++代码的典型案例，还可以帮你理解数据结构的标准实现  操作系统\n 《深入理解计算机系统》： 推荐大家和 CMU 15-213 CSAPP 这门课一块看 《Linux内核设计与实现》： 建议和操作系统原理的课本结合一起看 《深入理解linux内核》 ：讲2.6版本的内核  服务器编程\n 《Linux高性能服务器编程》：TODO 《UNIX 环境高级编程》：选看 《UNIX网络编程卷1》：选看 《Linux多线程服务器端编程》：选看 《深入理解Nginx》：选看  计算机网络\n 浙大 计网课程 《计算机网络原理：自顶向下方法》 《TCP/IP详解卷1》 《图解TCP/IP》 《图解HTTP》  分布式数据库\n 《MySQL必知必会》：done 《MySQL技术内幕：InnoDB存储引擎》 MySQL实战45讲 —— 极客时间 《Redis设计与实现》：TODO  网络服务器相关项目\n WebServer STL 源码 libvent Memcached Redis  ","permalink":"https://blog.fzhiy.net/2021-06-25-%E9%98%85%E8%AF%BB%E5%AE%9E%E8%B7%B5%E8%AE%A1%E5%88%92/","tags":["Cpp","Linux","Network"],"title":"阅读实践计划"},{"categories":["Life"],"contents":"还是昨天（2021年5月22日）上午11点，从某些微信公众号和知乎上看到传来了这条消息。看到这条消息时感觉很震惊，这么突然？ 印象中还是那个在田间查看水稻生长情况（结籽）、和蔼的爷爷\n配置所需20210906211659\n\"\r配置所需\r\n配置所需20210906211740\n\"\r配置所需\r\n不久辟谣了。 但从消息中看出袁爷爷可能还是比较危险 2021-05-22 13:07 袁爷爷走了\n一稻济世，万家粮足 国士无双，先生千古\n配置所需20210906211758\n\"\r配置所需\r\n袁爷爷一路走好\n务实 严谨 十年如一日\n","permalink":"https://blog.fzhiy.net/2021-02-23-%E9%A3%8E%E5%90%B9%E8%BF%87%E7%A8%BB%E7%94%B0%E6%88%91%E5%B0%B1%E6%83%B3%E8%B5%B7%E4%BD%A0/","tags":[],"title":"风吹过稻田我就想起你"},{"categories":["Life"],"contents":"不知何时就有这样的自信（ZhiNian）\n期待有天作为选手参加马拉松比赛\n我想\n或许源自年少时对运动员的向往\n或许源自奔跑过程给我的感觉\n亦或许 有的热爱不需要理由\n附上最近几天的跑步记录（另外跑前最好别吃辛辣食物！要么你能吃，要么你就别吃，看下图配速就知道为啥我知道了）\n配置所需\"\r配置所需\r\n配置所需\"\r配置所需\r\n配置所需\"\r配置所需\r\n配置所需\"\r配置所需\r\n（或许是我太xian了，滚去看论文……）\n","permalink":"https://blog.fzhiy.net/2020-11-13-%E8%AF%A5%E5%A6%82%E4%BD%95%E8%A1%A8%E8%BE%BE%E5%AF%B9%E4%BD%A0%E7%9A%84%E7%83%AD%E7%88%B1/","tags":[],"title":"该如何表达对你的热爱"},{"categories":["Life"],"contents":"一个人 一只背包 在国庆中秋双节时开始一次不凡的旅行\n从以往的想象直到真正地亲身体会 会发现事情并非都如想象般那样\n或许这是开始的第一站 但相信绝非最后一站\n沿途随手拍\n配置所需\"\r配置所需\r\n当不知所措或迷惘时 不妨停下来思考\n想想昨天 想想今天 想想明天\n2020终究是一个不平凡之年 也是崭新的起点\n我一直在路上！（flag时间恰好是2020 哈哈）\n（凡事都需全力以赴 同样开心也是 双节快乐~）\n","permalink":"https://blog.fzhiy.net/2020-10-03-%E4%B8%8D%E5%87%A1%E4%B9%8B%E5%8F%8C%E8%8A%82%E8%A1%8C/","tags":[],"title":"不凡之“双节”行"},{"categories":null,"contents":"","permalink":"https://blog.fzhiy.net/search/","tags":null,"title":"Search"}]
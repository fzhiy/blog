<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on fzhiy&#39;s blog</title>
    <link>https://blog.fzhiy.net/categories/algorithm/</link>
    <description>Recent content in Algorithm on fzhiy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 13 Apr 2022 22:47:09 +0800</lastBuildDate><atom:link href="https://blog.fzhiy.net/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[C&#43;&#43;]Effective C&#43;&#43;笔记</title>
      <link>https://blog.fzhiy.net/posts/2022-04-13-c&#43;&#43;effective-c&#43;&#43;%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 13 Apr 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/2022-04-13-c&#43;&#43;effective-c&#43;&#43;%E7%AC%94%E8%AE%B0/</guid>
      <description>导读 1 2 3 4 5 6 7 8 9 10 11 12 class Widget { public: Widget(); // default 构造函数 Widget(const Widget&amp;amp; rhs); // copy 构造函数 Widget&amp;amp; operator=(const Widget&amp;amp; rhs); // copy assignment 操作符 }; Widget w1; // 调用默认构造函数 Widget w2(w1); // 调用拷贝构造函数 w1 = w1;</description>
    </item>
    
    <item>
      <title>十大排序算法</title>
      <link>https://blog.fzhiy.net/posts/2022-03-09-%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 09 Mar 2022 14:50:21 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/2022-03-09-%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>十大排序一图总览 算法 最佳时间复杂度 平均时间复杂度 最差时间复杂度 空间复杂度 冒泡排序 O(n) O($n^2$) O($n^2$​) O(1) 插入排序 O(n) O($n^2$) O($n^2$​) O(1) 归并</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode每日一题[2022.03]</title>
      <link>https://blog.fzhiy.net/posts/2022-03-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
      <pubDate>Wed, 02 Mar 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/2022-03-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</guid>
      <description>[03.02]\392. Is Subsequence 传送门 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 // dp[i+1][j+1]: s[0,...,i] 和 t[0,...,j]中的最长公共子串的长度. 故dp[m]</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode每日一题[2022.02]</title>
      <link>https://blog.fzhiy.net/posts/2022-02-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
      <pubDate>Tue, 15 Feb 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/2022-02-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</guid>
      <description>[2.10]\560. Subarray Sum Equals K 传送门 分析：前缀和 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public: int subarraySum(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { int n = nums.size(); vector&amp;lt;int&amp;gt; sum(n+1, 0); for (int i=0; i&amp;lt;n; i++) { sum[i+1] = sum[i] + nums[i]; } int ans = 0; unordered_map&amp;lt;int, int&amp;gt;</description>
    </item>
    
    <item>
      <title>[刷题]企业真题|专项</title>
      <link>https://blog.fzhiy.net/posts/2022-01-19-%E5%88%B7%E9%A2%98%E7%89%9B%E5%AE%A2%E7%BD%91/</link>
      <pubDate>Wed, 19 Jan 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/2022-01-19-%E5%88%B7%E9%A2%98%E7%89%9B%E5%AE%A2%E7%BD%91/</guid>
      <description>字节跳动 ZJ1 附加题 存在n+1个房间，每个房间依次为房间1 2 3&amp;hellip;i，每个房间都存在一个传送门，i房间的传送门可以把人传送到房间pi</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode每日一题[2022.01]</title>
      <link>https://blog.fzhiy.net/posts/2022-01-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</link>
      <pubDate>Sat, 01 Jan 2022 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/2022-01-%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</guid>
      <description>01.01[312. Burst Balloons] 传送门 You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of</description>
    </item>
    
    <item>
      <title>[刷题]LeetCode</title>
      <link>https://blog.fzhiy.net/posts/%E5%88%B7%E9%A2%98leetcode/</link>
      <pubDate>Wed, 01 Dec 2021 22:47:09 +0800</pubDate>
      
      <guid>https://blog.fzhiy.net/posts/%E5%88%B7%E9%A2%98leetcode/</guid>
      <description>精选高频面试题 合并有序链表 反转链表 单例模式 简单工厂模式 快速排序 归并排序 实现一个堆排序 设计LRU缓存 重排链表 奇偶链表 写三个线程交替打印ABC Top</description>
    </item>
    
  </channel>
</rss>
